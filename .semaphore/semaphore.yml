version: v1.0
name: Initial Pipeline
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804
blocks:
  - name: Elixir tests
    task:
      jobs:
        - name: 'Job #1'
          commands:
            - checkout
            - cd elixir
            - mix local.hex --force
            - mix local.rebar --force
            - cache restore
            - 'mix do deps.get, compile --warnings-as-errors'
            - cache store
            - mix test
      prologue:
        commands:
          - kiex install 1.11
          - sem-version elixir 1.11
          - mkdir -p /tmp/test-results
          - artifact pull workflow bin/test-result-linux -d /tmp/bin/test-result
          - 'export PATH=$PATH:/tmp/bin'
          - chmod +x /tmp/bin/test-result
      epilogue:
        always:
          commands:
            - test-result /tmp/test-results/junit.xml /tmp/test-results/junit.json
            - artifact push job /tmp/test-results -d test-results
    dependencies:
      - Build CLI - Linux
  - name: Mocha tests
    dependencies:
      - Build CLI - Linux
    task:
      jobs:
        - name: 'Job #1'
          commands:
            - checkout
            - cd js
            - cache restore
            - npm install
            - cache store
            - npm test
      epilogue:
        always:
          commands:
            - test-result /tmp/test-results/junit.xml /tmp/test-results/junit.json
            - artifact push job /tmp/test-results -d test-results
      prologue:
        commands:
          - mkdir -p /tmp/test-results
          - artifact pull workflow bin/test-result-linux -d /tmp/bin/test-result
          - 'export PATH=$PATH:/tmp/bin'
          - chmod +x /tmp/bin/test-result
  - name: RSpec tests
    dependencies:
      - Build CLI - Linux
    task:
      jobs:
        - name: 'Job #1'
          commands:
            - checkout
            - cd ruby
            - cache restore
            - bundle install --deployment --path vendor/bundle
            - cache store
            - bundle exec rspec --format RspecJunitFormatter --out /tmp/test-results/junit.xml
      epilogue:
        always:
          commands:
            - test-result /tmp/test-results/junit.xml /tmp/test-results/junit.json
            - artifact push job /tmp/test-results -d test-results
      prologue:
        commands:
          - mkdir -p /tmp/test-results
          - artifact pull workflow bin/test-result-linux -d /tmp/bin/test-result
          - 'export PATH=$PATH:/tmp/bin'
          - chmod +x /tmp/bin/test-result
  - name: Build CLI - Linux
    dependencies: []
    task:
      jobs:
        - name: 'Build CLI'
          commands:
            - 'git clone https://github.com/renderedtext/test-results-cli.git test-results-cli'
            - cd test-results-cli
            - make
      epilogue:
        on_pass:
          commands:
            - artifact push workflow result_parser -d bin/test-result-linux
      agent:
        machine:
          type: e1-standard-2
          os_image: ubuntu1804
  # - name: Build CLI - Mac
  #   dependencies: []
  #   task:
  #     prologue:
  #       commands:
  #         - brew install autoconf wxmac openssl fop coreutils automake libyaml readline libxslt libtool unixodbc unzip curl
  #         - brew install asdf
  #         - echo -e "\n. $(brew --prefix asdf)/asdf.sh" >> ~/.bash_profile
  #         - export CFLAGS="-O2 -g -fno-stack-check"
  #         - export KERL_CONFIGURE_OPTIONS="--disable-hipe --without-javac --with-ssl=$(brew --prefix openssl)"
  #         - asdf plugin-add erlang
  #         - asdf plugin-add elixir
  #     jobs:
  #       - name: 'Build CLI'
  #         commands:
  #           - 'git clone https://github.com/renderedtext/test-results-cli.git test-results-cli'
  #           - cd test-results-cli
  #           - asdf install
  #           - make
  #     epilogue:
  #       on_pass:
  #         commands:
  #           - artifact push workflow result_parser -d bin/test-result-mac
  #     agent:
  #       machine:
  #         type: a1-standard-4
  #         os_image: macos-xcode11
